/*! \page scft_param_pg_page Parameter File - pscf_pg 

\ref scft_param_pc_page       (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref scft_field_page  (Next)
<BR>

The parameter file format for SCFT calculations using the pscf_pg
GPU-accelerated program is nearly identical to the parameter file
format for \ref scft_param_pc_page "pscf_pc".  The Mixture block uses
the same format as that used by both pscf_1d and pscf_pc, with the
exception of a single optional added parameter (`useBatchedFFT`,
outlined \ref scft_param_pg_batched_fft_sec "below"). The Interaction
block also uses the same format as pscf_1d and pscf_pc. The Domain
block and optional Environment block have the same formats as those 
used by pscf_pc.  The same two iterator algorithms are available for 
use in either program, using identical parameter file formats. Both
programs provide a single default Sweep algorithm named LinearSweep,
as described \ref scft_sweep_linear_sec "here". 

\section scft_param_pg_batched_fft_sec useBatchedFFT

The only difference between parameter file options available for the
pscf_pc and pscf_pg programs is the optional "useBatchedFFT" parameter
that may appear in the Mixture block of a pscf_pg parameter file. The
purpose of this option is discussed below.

To compute the stress values for a flexible unit cell, fast Fourier
transforms (FFTs) need to be performed on both the forward and 
backward propagator of every polymer block every step along the chain 
contour. The requird calculation often requires several hundred FFTs
that are not used for other purposes. By default, pscf_pg performs 
these FFTs in parallel, using a "batched" FFT algorithm provided by 
cuFFT that performs as many parallel FFTs as is needed to maximize 
GPU occupancy. Use of this option can signficantly accelerate stress 
calculations when the grid size is modest. 

However, batched FFTs require significant amounts of memory to be
allocated on the GPU to store the Fourier transform of the propagator,
which can be avoided when using non-batched FFTs. To be precise,
batched FFTs nearly double the total on-chip memory usage of the whole
program. We therefore provide an optional parameter, `useBatchedFFT`, 
which allows enable use of batched FFTs to save computation time or
disable them to save memory.  This parameter immediately follows `ds` 
in the Mixture block of the parameter file. 

Whether or not batched FFTs will cause a problem depends on both the
GPU being used and the number of gridpoints in the system. Modern GPUs
tend to have very large on-chip memories (for example, an A100 has
40GB), so they are capable of handling the memory demand of batched
FFTs in all but the very largest of calculations. Older GPUs, however,
have smaller on-chip memories, meaning that users may encounter an
"out of memory" error even when the calculation is not terribly
large. 

Furthermore, the computational benefit of batched FFTs shrinks as the
number of gridpoints increases. For calculations with 100,000
gridpoints on an A40 GPU, we have found that batched FFTs allow the
stress to be calculated 10x faster than non-batched FFTs, while for
calculations with 1,000,000 gridpoints, batched FFTs are only 1.16x
faster. 

Therefore, we recommend that users use non-batched FFTs for
calculations that exceed one million gridpoints, or for smaller
calculations when paired with older GPUs. If an "out of memory"
error is encountered when using batched FFTs, try using non-batched 
FFTs to see if this is enough to solve the problem. 

\section scft_param_pg_seealso_sec See Also:
<ul>
  <li> \ref scft_param_pc_page "Parameter file for pscf_pc (SCFT)" </li>
  <li> \ref rpc_System_page "System" </li>
</ul>

<BR>
\ref scft_param_pc_page  (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref scft_param_page     (Up)   &nbsp; &nbsp; &nbsp; &nbsp; 
\ref scft_field_page   (Next)

*/
