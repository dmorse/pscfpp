/*! \page user_command_page Command Files

 \ref user_param_page   (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref user_example_page (Next) 
<BR>

For any PSCF simulation program, the parameter file is read first, followed 
by a command file.  The name of the command file is specified when the 
program is invoked as an argument of the -c command line option.  

The command file contains a sequence of commands that are read and 
executed in the order in which they appear in the file. Each command 
begins with a command name that is given in upper case letters.  Some 
commands take one or more parameters, which must appear after the 
command name, separated by whitespace.  The program stops execution 
and returns control to the operating system when it encounters the 
command name 'FINISH' on a line by itself. 

Full descriptions of all of the commands recognized by all three PSCF
programs are given \ref scft_command_page "here". 

\section user_command_example_sec Example: SCFT command file, periodic structure

Suppose that pscf_pc is used to perform an SCFT calculation periodic 
structure of known space group symmetry, and is invoked from a directory 
that contains a parameter file named "param" and a command file named 
"command", using the command
\code
   pscf_pc -e -p param -c command > log
\endcode
Suppose that the working directory has subdirectories named "in" and "out",
such that the "in" directory contains an initial w-field file named w.bf, 
while output files are all written to the out directory.  The following is 
an example of a minimal command file that could be used for this purpose:
\code
READ_W_BASIS    in/w.bf
ITERATE
WRITE_W_BASIS   out/w.bf
WRITE_C_RGRID   out/c.rf
FINISH
\endcode
This file would work equally well as input to the GPU accelerated pscf_pg
program, which has the same user interface as pscf_pc.
This command file instructs the program to:

- READ_W_BASIS: Read in a chemical potential fields (w-fields) from the
  file in/w.rf in symmetry-adapted Fourier basis format.

- ITERATE: Iteratively solve the SCFT equation, using the iterator 
  algorithm and parameters that are specified in the parameter file.

- WRITE_W_BASIS: Write the converged chemical potential fields 
  (w-fields) to a file out/w.bf in symmetry-adapted basis format.

- WRITE_C_RGRID: Write the corresponding monomer concentration fields 
  (c-fields) to a file out/c.rf in r-grid format, in which field values
  are given as values of nodes of a real-space grid.

- FINISH: stop execution

The FINISH command is always the last command that is read in a command 
file, and causes execution of the program to halt. 

In this example, the concentration field that is written in r-grid format 
by the command WRITE_C_RGRID could be used for visualization.

<b> Interpretation of file names </b>:
Many commands require the names of input or output files as arguments.
By default, file names are interpreted as paths that are defined relative 
to the current working directory, i.e., relative to the directory from which 
the program executable was invoked. File name paths may include names of 
subdirectories of this directory and path separator slash characters, as 
done in the above example.  This default behavior may, however, be modified 
by using the "-i" and/or "-o" \ref user_usage_page "command line options" 
to automatically add prefixes to paths for input and output files, 
respectively.  

<b> Example (revisited) </b>: The command file in the above example was
designed for a case in which pscf_pc or pscf_pg is invoked without using 
the -i or -o command line options. If the program had instead been invoked 
using these options to specify prefixes of "in/" and "out/", e.g., as
\code
 > pscf_pc -d 3 -p param -c command -i in/ -o out/ -e > log
\endcode
then the corresponding command file could have been written in a form
\code
READ_W_BASIS    w.bf
ITERATE
WRITE_W_BASIS   w.bf
WRITE_C_RGRID   c.rf
FINISH
\endcode
in which the names of the input and output files that appear in the 
command file do not need to include explicit "in/" and "out/" directory 
names. In this case, the prefix "in/" is instead automatically prepended 
to the name given for any input file in the parameter or command file, 
while the prefix "out/" is prepended to the name of any output file. 
Note that, if a prefix is used to specify a subdirectory in which files
are located, as in this example, then the prefix string must include a
trailing backlash character.

 <BR>
 \ref user_param_page   (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref user_page         (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
 \ref user_example_page (Next) 
*/
