/*! \page developer_build_abs_page Use of absolute file paths

\ref developer_list_page  (Prev)
\ref developer_standards_page  (Next)
<BR>

The file name conventions used in the PSCF makefile system make it 
awkward for a user to explictly request compilation of a specific source 
file by using the name of that file as an argument of the make command. 
The awkwards arises from the fact that the build system uses absolute 
paths for all object files targets, and the fact that the "make" program 
is not smart enough to recognize when an absolute and relative path are 
equivalent.  As a result, the only way explicitly request compilation 
of a single source file is to use the absolute path to the object file 
as the argument of the make command.  For example, if the absolute path 
to the root PSCF directory within a user account named "smith" was 
"/users/smith/pscfpp/", user "smith" could compile the source file 
src/rpc/simulate/Simulator.cpp by entering
\code
  make /users/george/pscfpp/src/rpc/simulate/Simulator.o
\endcode
or
\code
  make ~/pscfpp/src/rpc/simulate/Simulator.o
\endcode
from either the src/rpc/simulate or src/rpc directory. 
The need to type out such long absolute paths is so inconvenient, 
however, that we recommend developers instead who want to compile 
single files in-source instead get in the habit of simply using 
"make all" from the directory that contains the file of interest, 
as described above.

<BR>
\ref developer_list_page  (Prev)
\ref developer_page  (Up)  &nbsp; &nbsp; &nbsp; &nbsp;
\ref developer_standards_page  (Next)

*/
