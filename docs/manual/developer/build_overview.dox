/*! \page developer_build_overview_page Build Process

\ref developer_build_page       (Prev/Up) &nbsp; &nbsp; &nbsp; &nbsp;
\ref developer_build_compile_page  (Next)
<BR>

PSCF is compiled using a system of unix makefiles.  Compilation and
installation of the package involves the following operations:

  - Compiling all source files in the src directory

  - Creating a static library files for each namespace-level subdirectory
    of the src directory

  - Creating the executable files pscf_1d, pscf_pc, and pscf_pg and
    installing them (by default) in the bin directory

Several aspects of this process are described in more detail below.

All files in the PSCF repository that contain C++ or CUDA C++ code are
located in the src directory tree.  Files with file name extension *.cpp
or *.cu, which are compiled by the build system, are referred to here as
either as compilable source files, or simply source files.  When each
such source file is compiled, the build system creates two associated
files that we refer to as an object file and a dependency file:

  - An object file is a file with file name extension .o that contains
    the object code created by compiling the associated source file.

  - A dependency file is a makefile fragment with file name extension .d
    that contains a lists of all the the prerequisites of the associated
    object file.

The object and dependency file that are created by compiling a source
file have the same base file name as the associated source file, with
different file name extensions.

The dependency file contains a list of names of files that are
"prerequisites" of the object file. This includes the associated source
file and all other C++ files (e.g., header files) that are directly or
indirectly included into the source file via preprocessor "include"
statements to create the translation unit that is passed to the compiler.
This list of pre-requisite files is used by the PSCF build system to
keep track of when an existing object file has become out-of-date due
to modifications of one or more pre-requisite files, and thus needs to
be recreated.

The PSCF build system also creates several static libraries with file
names of the form lib\*.a. Each such library contains all of the object
code this is created by compiling the source files in one namespace-level
subdirectory of the src directory.  The name of each library file is
given by a prefix "lib", followed by the name of the associated namespace
level directory, followed by a suffix ".a". For example, the file
"librpc.a" is a library file containing the contents of all of the object
files created by compiling source files the src/rpc namespace level
directory.

The object, dependency and library files that are created during the
build process are referred to collectively as "intermediate" files.  The
directory in which all such intermediate files are placed is referred to
as the build directory.

The PSCF makefile system is designed to allow a user to perform either
an "out-of-source" build or an "in-source" build. In an "out-of-source"
build, all intermediate files created during compilation are placed in
a build directory that is distinct from the src directory.  By default,
PSCF uses the bld subdirectory of the PSCF root directory as the build
directory for out-of-source builds.  In an "in-source" build, these
intermediate files are instead placed within the src directory.

During an in-source build, the PSCF build system places the \*.o object
file and the \*.d dependency file that are created by compiling each
source file in the same subdirectory of src as the associated source
file. During an out-of-source build, these two files are instead placed
in an analogous subdirectory of the bld directory tree. To make this
possible, the bld directory has an internal directory structure
analogous to that of the src directory.

The library file that contains object code created by compiling all
the source files in a namespace level directory of the src directory
is placed in the root of the corresponding namespace level directory
of the build directory. The file librpc.a is thus placed in the
bld/rpc directory in the case of out-of-source compilation or in
src/rpc in the case of in-source compilation.

The three program-level subdirectories of the src directory (named r1d,
rpc, and rpg) each have an additional file that contains the main
program function for one of the three PSCF programs. The base name of
this program is the same as the name of the resulting executable. For
example, the main program file in src/rpc is named pscf_pc.cpp, and
is used to create the executable file bin/pscf_pc. Whenever the code in
one of these three directories is compiled (by invoking "make all" from
within that directory) the build system first compiles all the source
files and creates a static library, then compiles the main program
file, links it to all relevant library files to create an executable,
and installs the resulting executable file in the bin directory.

<BR>
\ref developer_build_page         (Prev / Up) &nbsp; &nbsp; &nbsp; &nbsp;
\ref developer_build_compile_page    (Next)

*/
