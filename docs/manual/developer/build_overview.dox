/*! \page developer_build_overview_page Build Process

\ref developer_build_page       (Prev/Up) &nbsp; &nbsp; &nbsp; &nbsp;
\ref developer_build_make_page  (Next)
<BR>

PSCF is compiled by the user using a system of unix makefiles.
Compilation and installation of the package involves the following steps:

  - Compiling all source files in the src directory

  - Creating a static library files in each namespace-level directory

  - Creating the executable files pscf_1d, pscf_pc, and pscf_pg.

Several aspects of this process are described in more detail below.

All C++ and CUDA C++ source code files for PSCF are located in the 
src directory tree, including all header files. Files with filename 
extension *.cpp or *.cu are compiled by the build system, and are 
referred to here as either as compilable source files or simply as 
source files.  When a source file in this directory is compiled, the 
build system creates two associated files that we refer to as an 
object file and a dependency file:

  - An object file is a file with file name extension .o that contains 
    the object code created by compiling the associated source file.  

  - A dependency file is a makefile fragment with file name extension .d
    that contains a makefile rule that lists all the the pre-requisites 
    of the associated object file.

The object and dependency file that are created by compiling a source 
file have the same base file name as the associated source file, with
different file name extensions.

The dependency file associated with each source file contains a list of 
files that are "pre-requisites" of the associated object file. This list 
includes the source file that is compiled and all of the other C++ files
(i.e., header and template implementation files) that this source file 
directly or indirectly includes via preprocessor "include" statements.
This list of pre-requisite files is used by the PSCF build system to 
keep track of when an existing object file has become out-of-date due
to  modifications of one or more pre-requisite files, and thus needs to
be recreated.

The PSCF build system also creates several static libraries with file 
names of the form lib\*.a. Each such library contains all of the assembly 
code created by compiling the source files in one namespace-level 
subdirectory of the src directory. Each library file is placed in the
root directory of the corresponding namespace level directory. The name 
each directory file is given by a prefix "lib", followed by the name of
the namespace level directory, followed by a suffix ".a". For example,
the library file containing all of the object files in the src/rpc 
directory a file named "librpc.a" in the src/rpc directory.

The object, dependency and library files that are created during the
build process are referred to in what follows as "intermediate" files.
The directory in which all such intermediate files are placed is
referred to as the build directory.

The PSCF makefile system is designed to allow a user to perform either
an "out-of-source" build or an "in-source" build. In an "out-of-source"
build, all intermediate files created during compilation are placed in
a build directory that is distinct from the src directory.  By default,
PSCF uses the bld subdirectory within the PSCF root directory as the 
build directory for this purpose.  In an "in-source" build, these 
intermediate files are instead placed within the src directory, alongside 
the source files from which they were created.

During an in-source build, the PSCF build system places the \*.o object
file and the \*.d dependency file that are created by compiling one
source file in the same subdirectory of src as the associated source
file. During an out-of-source build, these two files are instead placed 
in an analogous subdirectory of the bld directory tree. To make this 
convention possible, the bld directory must have an internal directory 
structure exactly analogous to that of the src directory.

The three program-level subdirectories of the src directory (named r1d,
rpc, and rpg) each have an additional file that contains the main 
program function for one of the three PSCF programs. Whenever the code
in one of these directories is compiled, the build system also compiles
the main program file, links it to all relevant library files to create
an executable, and installs the resulting executable file in the
bin directory.

<BR>
\ref developer_build_page         (Prev / Up) &nbsp; &nbsp; &nbsp; &nbsp;
\ref developer_build_make_page    (Next)  

*/
