/*! 
\page rpc_AmIteratorBasis_page AmIteratorBasis

The AmIteratorBasis algorithm used by either the pscf_pc program or
pscf_pg solves the SCFT equations for a periodic system using the 
Anderson Mixing algorithm. Closely analogous classes to implement
this algorithm are defined in the Pscf::Rpc and Pscf::Rpg namespaces.

Class API documentation:
<ul>
   <li> Pscf::Rpc::AmIteratorBasis </li>
   <li> Pscf::Rpg::AmIteratorBasis </li>
</ul>

\section rpc_AmIteratorBasis_algorithm_sec Algorithm

The variant of Anderson mixing implemented by the AmIteratorBasis 
classes is very similar to that described in a paper by Arora et al.  
[Arora, Morse, Bates, and Dorfman, J. Chem.  Phys. vol. 146, 244902 (2017)], 
which was written as a description of an algorithm used in the older
Fortran version of PSCF.  The version of this algorithm used by 
AmIteratorBasis adjusts the fields by adjusting the compoments of each 
field in a basis of symmetry adapated basis functions, thereby preserving 
the space-group symmetry of the fields throughout the iteration.
The algorithm can be used to either solve the SCFT equations for a rigid 
unit cell or to solve the SCFT equations and also optimize some or all 
of the unit cell parameters of a flexible unit cell so as to minimize 
the free energy density. The treatment of unit cell parameters depends 
on the values of the "isFlexible" and "flexibleParams" parameters, as 
described below. 

\sa \ref pscf_AmIteratorTmpl_page

\section rpc_AmIteratorBasis_parameter_sec Parameter File

A typical example of the parameter file format for this iterator is shown
below:
\code
  AmIteratorBasis{
    epsilon      1e-8
    maxItr       100
    maxHist      50
    isFlexible   1
  }
\endcode
The format of this block is described more formally below:
\code
AmIteratorBasis{
   epsilon          real 
   maxItr*          int (200 by default)
   maxHist*         int (50 by default)
   verbose*         int (0-2, 0 by default)
   errorType*       string ("norm", "rms", "max", or "relNorm", "relNorm" by default)
   isFlexible*      bool (0 or 1, 1/true by default)
   flexibleParams*  Array [ bool ] (nParameters elements)
   scaleStress*     real (10.0 by default)
   lambda*          real (1.0 by default)
   useLambdaRamp    bool (true by default)
   r                real (0.9 by default)

}
\endcode
Here, as elsewhere, labels followed by an asterisk (*) represent optional 
parameters. The meaning of the various parameters are described below:
<table>
  <tr>
    <td> <b> Label </b>  </td>
    <td> <b> Description </b>  </td>
  </tr>
  <tr>
    <td> epsilon </td>
    <td> Error tolerance - iteration stops if the magnitude of the error 
         becomes less than epsilon.  </td>
  </tr>
  <tr>
    <td> maxItr* </td>
    <td> Maximum number of iterations that will be attempted before
         terminating (200 by default) </td>
  </tr>
  <tr>
    <td> maxHist* </td>
    <td> Maximum number of previous trial solulions that will be 
         retained in memory for used by the AM algorithm 
         (50 by default) </td>
  </tr>
  <tr>
    <td> verbose* </td>
    <td> Integer level 0, 1, 2 for verbosity of log output during iteration.
         (0 by default) </td>
  </tr>
  <tr>
    <td> errorType* </td>
    <td> Identifer for the choice of a definition for the scalar error . 
         Meaning of the allowed values are "norm", "rms" "max", and 
         "relNorm", are discussed \ref pscf_AmIteratorTmpl_page "here".
         ("relNorm" by default) </td>
  </tr>
  <tr>
    <td> isFlexible* </td>
    <td> Set isFlexible true to enable or false to disable iterative 
         optimization of unit cell parameters so as to minimize the free 
         energy density. (true by default) </td>
  </tr>
  <tr>
    <td> flexibleParams* </td>
    <td> Use flexibleParams to declare only *some* lattice parameters
         as flexible. **This optional entry is allowed only if the 
         isFlexible parameter is true.** This array must contain one entry 
         for each lattice parameter, with a value 1 (true) if the parameter 
         is flexible or 0 (false) if the parameter value is fixed.
         If isFlexible is true but flexibleParams is absent, then all
         lattice parameters will be flexible. </td>
  </tr>
  <tr>
    <td> scaleStress* </td>
    <td> Constant factor by which stress components are multiplied in
         the definition of the residual attempted if isFlexible is
         true (10.0 by default). </td>
  </tr>
  <tr>
    <td> lambda* </td>
    <td> Mixing parameter in standard mixing correction step for an
         \ref pscf_AmIteratorTmpl_page "Anderson mixing algorithm".
         (1.0 by default) </td>
  </tr>
  <tr>
    <td> useLambdaRamp* </td>
    <td> If true, use ramp-up of mixing parameter, as discussed
         \ref pscf_AmIteratorTmpl_algo_correct_sub "here". 
         (true by default) </td>
  </tr>
  <tr>
    <td> r* </td>
    <td> Ratio used in formula for slow ramp-up of mixing parameter, 
         as discussed \ref pscf_AmIteratorTmpl_algo_correct_sub "here". 
         (0.9 by default) </td>
  </tr>
</table>
The iterative loop exits if the number of iterations has reached maxItr 
or if the magnitude of the scalar error drops below epsilon. 

<b> scaleStress </b>: If isFlexible is true, the choice of a value for 
the parameter scaleStress determines how strongly the definition of the 
scalar error weights errors that arise from nonzero derivatives of the 
free energy with respect to the unit cell parameters, relative to errors 
arising from errors in the SCFT equations for the w fields in a fixed
unit cell. This variable is irrelevant if isFlexible is false, and should 
normally be ommitted in this case. 

\section rpc_AmIteratorBasis_residual_sec Residual Definition

The vector of residuals used in this algorithm is described by Eqs. 
(10-13) of the article by Arora et al. (J. Chem. Phys. 2017).  To 
describe the residuals here, we use zero based indexing for monomer 
types and basis functions, us use \f$ N_{b} \f$ to denote the number 
of basis functions (referred to in the source code as Nbasis), and 
use \f$ N_{m} \f$ to denote the number of monomer types (referred to 
elsewhere as nMonomer).

The vector of residuals for a calculation for a rigid unit cell (i.e., 
one with isFlexible set false) has \f$ N_{b}N_{m} \f$ (or nBasis*nMonomer) 
scalar residuals.  
Let \f$ w_{ia} \f$ and \f$ \phi_{ai} \f$ denote the coefficients of 
basis function a in the symmetry-adapted Fourier expansions of the 
chemical potential field \f$ w_{i} \f$ and volume fraction 
\f$ \phi_{i} \f$ for monomer type i, respectively.
The residual component \f$ R_{ai}\f$ associated with basis function 
a and monomer type i is given, as in Eq. (10) of Arora et al. 
(JCP 2017), as 
\f[
  R_{ai} = \sum_{j=0}^{N_{m}-1} 
           \left ( \chi_{ij} \phi_{aj} - P_{ij}w_{aj} \right ) 
  \quad.
\f]
Here, \f$ P_{ij} \f$ is an element of an idempotent 
\f$ N_{m} \times N_{m} \f$ matrix \f$  P \f$ that can be 
expressed in matrix notation as
\f[
  P  = I
  - \frac{\epsilon \epsilon^{T} \chi^{-1} }
        { \epsilon^{T} \chi^{-1} \epsilon }
 \quad.
\f]
where \f$ \chi^{-1} \f$ is the matrix inverse of the \f$\chi\f$ 
matrix, and \f$\epsilon\f$ is a \f$ N_{m} \f$-component column 
vector with elements given by \f$ \epsilon_{i} = 1 \f$ for all 
\f$ i = 0, \ldots, N_{m}-1 \f$.

The vector of residuals for a calculation with a flexible unit 
cell (with isFleixble set true) has an additional stress residual 
associated with each flexible unit cell parameter. The residual
\f$ R_{m} \f$ associated with flexible unit cell parameter 
\f$ \theta_{m} \f$ is given by
\f[
    R_{m} = -S\frac{\partial f}{\partial \theta_{m}}
\f]
where \f$ f \f$ is the free energy per monomer (i.e., the free 
energy density times the monomer reference volume) in units in 
which \f$ kT = 1 \f$, while \f$S\f$ is an arbitrary prefactor 
whose value is given by the parameter scaleStress. (The factor
\f$S\f$ is set to 10.0 by default).

\section rpc_AmIteratorBasis_closed_sec Closed Systems (Canonical Ensemble)

A slight modification of the residual definition is required in the case 
case when a value of phi rather than mu is specified for every molecular 
species, giving a closed system, or a canonical statistical ensemble.  In 
this case, the solution of the SCF problem is not unique, becase the values
of the residuals defined above can be shown to be invariant under a shift 
in all of the chemical potential fields at all grid point points by any 
spatially homgeneous constant. To obtain a unique solution, in this case
the spatial average of the Laplace multiplier field \f$ \xi({\bf r}) \f$ 
is implicitly set to zero by convention.

*/
