namespace Pscf {
namespace Rpc {

/*! 
\page rpc_ForceBiasMove_page ForceBiasMove

The ForceBiasMove classes used by both the pscf_pc and pscf_pg programs 
implements a MC move for which the attempted move is generated by an
\ref rpc_ExplicitBdStep_page "explicit Euler Brownian dynamics step"

Two closely analogous classes named Pscf::Rpc::ForceBiasMove and 
Pscf::Rpg::ForceBiasMove that are defined in different namespaces 
are used to implement this move algorithm for different programs. 
The ForceBiasMove class defined in the Rpc namespace is used in the 
pscf_pc program (using CPU hardware) and the class defined in the Rpg 
namespace is used in the pscf_pg program (using GPU acceleration). 
These two classes implement the same step algorithm and use the same 
parameter file format, which are documented below.

\see ForceBiasMove (class API)

\section rpc_ForceBiasMove_algorithm_sec Step Algorithm

A general discussion of MC move algorithms for PS-FTS is given on a
\ref psfts_algorithm_MC_sec "separate page". As discussed there, each 
move consists of an unconstrained change in the fields, followed by 
application of a compressor to re-impose the incompressibility 
constraint. The decision about whether to accept or reject the
move is based on the value of the Hamiltonian after incompressibility
has been restored. 

The ForceBiasMove uses an explicit Euler Brownian dynamics (BD) step as 
an unconstrained move. The explicit Euler BD move is identical to the 
one implemented by the \ref rpc_ExplicitBdStep_page "ExplicitBdStep"
class defined in either the Rpc or Rpg namespace.  The only parameter 
required to generate such an attempted move is the mobility parameter 
used in this underlying BD step. This parameter is denoted by the label
"mobility" in the parameter file and in the source code, and by the 
symbol \f$ \gamma \f$ in mathematical formulas.

The change in \f$ W_{-}({\bf r}) \f$ generated by an explicit BD step
is given by the sum 
\f[
    \Delta W_{-}({\bf r}) = - \gamma \delta H/\delta W_{-}({\bf r}) 
    + g({\bf r})
\f]
of a Gaussian distributed random component \f$ g({\bf r}) \f$ plus a 
"force bias" \f$ -\gamma \delta H/\delta W_{-}({\bf r}) \f$.

The acceptance criterion for a ForceBiasMove is designed to satisfy
detailed balance by taking into account the effect of the force bias 
on both the probability of generating a specific change 
\f$ \Delta W_{-}({\bf r}) \f$ and the probability of generating the
hypothetical reverse move starting from the final state obtained at 
the end of the attempted move, after adjustment of \f$ W_{+} \f$ so
as to satisfy the partial saddle-point constraint.  Evaluation of the 
acceptance probability thus requires evalatuation of the force bias
(i.e., the functional derivative) as well as the Hamiltonian value 
in the final state that is obtained after applying the compressor 
algorithm.

The use of a force bias allows for much higher acceptance rates than
those obtained from the RealMove, for choices of parameters that yield 
similar magnitude changes in the fields.

\section rpc_ForceBiasMove_parameter_sec Parameter File

The only parameters needed by this algorithm are the "probability" 
parameter, which determines the probability that a move of this type
will be attempted, and a required parameter named "mobility", which
is the mobility parameter of the explicit BD step.  A typical example 
of an associated parameter file block is shown below.
\code
  ForceBiasMove{
    probability   0.5
    mobility      0.005
  }
\endcode
The format for this block is thus:
\code
  ForceBiasMove{
    probability  float (in range [0,1])
    mobility     float
  }
\endcode
The meanings of both parameter are summarized briefly below:
<table>
  <tr>
    <td> <b> Label </b>  </td>
    <td> <b> Description </b>  </td>
  </tr>
  <tr>
    <td> probability </td>
    <td> probability of attempting a step of this type  </td>
  </tr>
  <tr>
    <td> mobility </td>
    <td> Mobility parameter of underlying attempted BD step </td>
  </tr>
</table>

*/

}
}
