/*! 
\page rpc_LrCompressor_page LrCompressor

The LrCompressor classes used by both the pscf_pc and pscf_pg programs 
implements a linear-response Anderson mixing (LRAM) algorithm as described
in this publication.

Two closely analogous classes named Pscf::Rpc::LrCompressor and 
Pscf::Rpg::LrCompressor implement this algorithm for the pscf_pc CPU and
program and the pscf_pg GPU-accelerated program, respectively. These two 
classes implement the same step algorithm and use the same parameter file
format, which are documented below.

\section rpc_LrCompressor_algorithm_sec Step Algorithm

A general discussion of compressor algorithms for PS-FTS is given 
\ref psfts_algorithm_page "here". Each LrCompressor class implements 
the linear response (LR) algorithm that is presented in the following 
publication: <a href="https://doi.org/10.1063/5.0264036">
"Improved algorithm for identifying partial saddle-points in polymer
field theoretic simulations", K. Chen and D.C. Morse,
<em> J. Chem. Phys. </em> <b> 162 </b>, 243901 (2025). </a>.
This is a quasi-Newton algorithm in which linear response of an 
inhomogeneous ideal gas to an infinitesimal change in the pressure-like 
field \f$ W_{+}({\bf r}) \f$ is approximated by the analytically 
calculable response of a hypothetical homogeneous state of the same 
fluid.

\section rpc_LrCompressor_parameter_sec Parameter File

The LR algorithm does not require an adjustable parameters that effect 
the progress of iteratoin towards a solution.  The only required 
parameter for this algorithm is an error threshhold "epsilon".  The
iteration loop exits when a scalar definition of error is less than 
epsilon.  A minimal block could thus looks something like this:
\code
  LrCompressor{
    epsilon      1.0E-4
  }
\endcode
The full parameter block format, including several optional parameters, is 
shown below:
\code
LrCompressor{
  epsilon       float
  maxItr*       int     (default 200)
  verbose       int     (default 0)
  errorType*    string  ("norm", "rms", "max", or "relNorm")
}
\endcode
Meanings of all parameters are described briefly below:
<table>
  <tr>
    <td> <b> Label </b>  </td>
    <td> <b> Description </b>  </td>
  </tr>
  <tr>
    <td>  epsilon </td>
    <td>  error threshhold </td>
  </tr>
  <tr>
    <td>  maxItr* </td>
    <td>  maximum number of iterations to attempt before declaring failure </td>
  </tr>
  <tr>
    <td>  verbose* </td>
    <td>  verbosity level (lower values are less verbose. Default level = 0) </td>
  </tr>
  <tr>
    <td>  errorType* </td>
    <td>  Type of norm used to define the scalar error </td>
  </tr>
</table>

*/
