/*! 
\page rpc_AmCompressor_page AmCompressor

The AmCompressor classes used by both the pscf_pc and pscf_pg programs 
each implement a Anderson mixing compressor algorithm.
Two closely analogous classes named Pscf::Rpc::AmCompressor and 
Pscf::Rpg::AmCompressor implement this algorithm for the pscf_pc CPU
program and the pscf_pg GPU-accelerated program, respectively. These 
two classes implement the same step algorithm and use the same parameter 
file format, as documented below.

\section rpc_AmCompressor_algorithm_sec Step Algorithm

A general discussion of compressor algorithms for PS-FTS is given 
\ref psfts_algorithm_page "here". The implementation of the AM mixing
algorithm used in PSCF is discussed in the article:
 <a href="https://doi.org/10.1063/5.0264036">
"Improved algorithm for identifying partial saddle-points in polymer
field theoretic simulations", K. Chen and D.C. Morse, 
<em> J. Chem. Phys. </em> <b> 162 </b>, 243901 (2025). </a>,

\section rpc_AmCompressor_parameter_sec Parameter File

The only required parameter for this algorithm is the error threshhold
"epsilon". A minimal parameter file block could thus look something like
this:
\code
  AmCompressor{
    epsilon      1.0E-4
  }
\endcode
The full parameter file format, including all optional parameters, is 
shown below:
\code
AmCompressor{
  epsilon           float
  maxItr*           int     (default 200)
  maxHist           int     (default 50)
  verbose           int     (default 0)
  correctionRamp*   float   (default 0.9)
  errorType*        string  ("norm", "rms", "max", or "relNorm")
}
\endcode
Meanings of all parameters are described briefly below:
<table>
  <tr>
    <td> <b> Label </b>  </td>
    <td> <b> Description </b>  </td>
  </tr>
  <tr>
    <td> epsilon </td>
    <td> error threshhold </td>
  </tr>
  <tr>
    <td>  maxItr* </td>
    <td>  maximum number of iterations to attempt before declaring failure </td>
  </tr>
  <tr>
    <td>  maxHist* </td>
    <td>  maximum number of previous states to retain in history </td>
  </tr>
  <tr>
    <td>  verbose* </td>
    <td>  verbosity level (lower values are less verbose. Default level = 0) </td>
  </tr>
  <tr>
    <td>  errorType* </td>
    <td>  ???? </td>
  </tr>
</table>

*/
